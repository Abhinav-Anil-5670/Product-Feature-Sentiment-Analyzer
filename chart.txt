graph TD
    subgraph Client-Side
        UI[💻 User Interface <br> (Web/Mobile App)]
    end

    subgraph Server-Side
        API[🚀 Backend Server / API <br> (Flask / FastAPI)]
        MQ([✉️ Message Queue <br> (RabbitMQ / SQS)])
        Worker[⚙️ Batch Processing Worker <br> (Celery)]
        Service[🧠 Sentiment Analysis Service <br> (Your Python Code)]
        DB[(🗄️ Database <br> (PostgreSQL / MongoDB))]
        FS[☁️ File Storage <br> (S3 / Local Storage)]
    end

    subgraph External Dependencies
      spacy[spaCy]
      vader[VADER]
    end

    UI -- 1. API Request (Text/File) --> API
    API -- 2a. Analyze single text --> Service
    Service -- 2b. Returns JSON --> API
    API -- 2c. Returns JSON --> UI

    API -- 3a. Uploads file --> FS
    API -- 3b. Sends job message --> MQ
    MQ -- 3c. Consumed by --> Worker
    Worker -- 3d. Reads file --> FS
    Worker -- 3e. Processes rows --> Service
    Service -- 3f. Provides analysis --> Worker
    Worker -- 3g. Writes results --> DB
    UI -- 4. Polls for status/results --> API
    API -- 4b. Reads results --> DB


    Service --> spacy
    Service --> vader